version: '3.8'

x-environment:
  &default-environment
  DATABASE_URL: ${DATABASE_URL}
  SECRET_KEY: ${SECRET_KEY} # best to run openssl rand -hex 32
  PORT: ${PORT}
  EMAIL_URL: ${EMAIL_URL}
  GLITCHTIP_DOMAIN: ${GLITCHTIP_DOMAIN}
  DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
  CELERY_WORKER_CONCURRENCY: ${CELERY_WORKER_CONCURRENCY}  # Set to 2 to prevent excessive memory usage. Change it or remove to set it to the number of cpu cores.
x-depends_on:
  &default-depends_on
  - postgres
  - redis

services:
    db:
        image: mysql
        container_name: db_docker_symfony
        restart: always
        volumes:
          - mysql-data:/var/lib/mysql
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    
    phpmyadmin:
        image: phpmyadmin
        container_name: phpmyadmin_docker_symfony
        restart: always
        depends_on:
            - db
        ports:
          - 8080:80
        environment:
            PMA_HOST: db
        networks:
          - dev
    
    maildev:
      image: maildev/maildev
      container_name: maildev_docker_symfony
      command: bin/maildev --web 80 --smtp 25 --hide-extensions STARTTLS
      ports:
        - 8081:80
      restart: always
      networks:
        - dev

    postgres:
      image: postgres:15
      environment:
        POSTGRES_HOST_AUTH_METHOD: "trust"
      restart: unless-stopped
      volumes:
        - pg-data:/var/lib/postgresql/data
    redis:
      image: redis
      restart: unless-stopped
    web:
      image: glitchtip/glitchtip
      depends_on: *default-depends_on
      ports:
        - ${PORT}:8000
      environment: *default-environment
      restart: unless-stopped
      volumes: 
        - uploads:/code/uploads
    worker:
      image: glitchtip/glitchtip
      command: ./bin/run-celery-with-beat.sh
      depends_on: *default-depends_on
      environment: *default-environment
      restart: unless-stopped
      volumes: 
        - uploads:/code/uploads
    migrate:
      image: glitchtip/glitchtip
      depends_on: *default-depends_on
      command: "./manage.py migrate"
      environment: *default-environment
networks:
    dev:

volumes:
  mysql-data:
  pg-data: